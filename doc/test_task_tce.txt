Необходимо реализовать распределенную обработку задач в "облаке".

На вход подается 2 XML-файла с настройками:
1) количество задач на входе, имя, приоритет, диапазон длительности (например, 5-25 сек.) каждой
2) количество машин в "облаке", имя и порт для каждой

Машины запускаются как отдельные приложения и слушают свой порт. Для связи используется TCP.
Основной модуль после обработки входных файлов диспетчеризирует задачи и старается максимально загрузить все машины задачами согласно приоритету.
Каждый модуль согласно настройкам случайным образом определяет длительность задачи и выводит текстовое сообщение с именем 
машины и длительностью задачи, сообщения начала и окончания задачи. Закончив работу, извещает главную программу. Как только задача выполнена 
и машина свободна, она может быть загружена следующей задачей.

Необходимо реализовать двустороннее взаимодействие между основным модулем и машинами из "облака".

Основная программа и "машины в облаке" - консольные на Java.

Опциональные требования (необязательные, но будут плюсом):
1. Написать скрипт (bat / bash / python / что-то другое) для запуска всех машин в "облаке" согласно XML на входе. (+2)
2. Реализовать моделирование случайной ситуации, когда машина якобы не может выполнить задачу. (+5)
3. Предусмотреть возможное расширение в будущем и использование других форматов и источников входных настроек (ini-файлы, базы данных). Реализовывать чтение не надо! (+1)
4. Предусмотреть возможное расширение в будущем и использование отличного от TCP канала для связи. (+3)
5. Использование исключений. (+3)
6. Командная строка основной программы (+1)

Должно запускаться и работать под Windows и Linux.
Требований по памяти и быстродействию нет.